/*
 * Copyright 2019 Patrik Karlström.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.almond.util.swing.dialogs.about;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JPanel;
import se.trixon.almond.util.Dict;
import se.trixon.almond.util.SystemHelper;
import se.trixon.almond.util.swing.dialogs.about.AboutPanel.TabComponentListener;

/**
 *
 * @author Patrik Karlström
 */
public abstract class BaseListTab extends JPanel implements TabComponentListener {

    public static final String LIST_SIGN = "● ";

    /**
     * Creates new form LibrariesTab
     */
    public BaseListTab() {
        initComponents();
        editorPane.addMouseListener(new PopupListener());
    }

    @Override
    public void reset() {
        editorPane.setCaretPosition(0);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        menuItem = new javax.swing.JMenuItem();
        scrollPane = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();

        menuItem.setText(Dict.COPY.toString());
        menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemActionPerformed(evt);
            }
        });
        popupMenu.add(menuItem);

        setLayout(new java.awt.BorderLayout());

        editorPane.setEditable(false);
        editorPane.setMargin(new java.awt.Insets(16, 16, 16, 16));
        editorPane.setPreferredSize(new java.awt.Dimension(72, 24));
        scrollPane.setViewportView(editorPane);

        add(scrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemActionPerformed
        SystemHelper.copyToClipboard(editorPane.getText());
    }//GEN-LAST:event_menuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JEditorPane editorPane;
    private javax.swing.JMenuItem menuItem;
    private javax.swing.JPopupMenu popupMenu;
    protected javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
    class PopupListener extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            maybeShowPopup(e);
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            maybeShowPopup(e);
        }

        private void maybeShowPopup(MouseEvent e) {
            if (e.isPopupTrigger()) {
                popupMenu.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    }
}
