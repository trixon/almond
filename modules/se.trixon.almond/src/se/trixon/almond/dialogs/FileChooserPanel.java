package se.trixon.almond.dialogs;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
public class FileChooserPanel extends javax.swing.JPanel {

    private final JFileChooser mFileChooser = new JFileChooser();
    private int mMode;
    private FileChooserButtonListener mFileChooserButtonListener;
    private String mTitle;

    /**
     * Creates new form FileChooserPanel
     */
    public FileChooserPanel() {
        initComponents();
        init();
    }

    public FileChooserPanel(int mode, String title) {
        initComponents();
        init();
        mMode = mode;
        mTitle = title;
        mFileChooser.setFileSelectionMode(mMode);
    }

    public JFileChooser getFileChooser() {
        return mFileChooser;
    }

    public int getMode() {
        return mMode;
    }

    public String getTitle() {
        return mTitle;
    }

    public void setTitle(String title) {
        mTitle = title;
    }

    public void setButtonListener(FileChooserButtonListener fileChooserButtonListener) {
        mFileChooserButtonListener = fileChooserButtonListener;
    }

    public void setMode(int mode) {
        mMode = mode;
        mFileChooser.setFileSelectionMode(mMode);
    }

    public JButton getButton() {
        return mButton;
    }

    public JLabel getLabel() {
        return mLabel;
    }

    public String getPath() {
        return mTextField.getText();
    }

    public JTextField getTextField() {
        return mTextField;
    }

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        mButton.setEnabled(enabled);
        mTextField.setEnabled(enabled);
    }

    public void setHeader(String string) {
        mLabel.setText(string);
    }

    public void setPath(String path) {
        mTextField.setText(path);
    }

    private void init() {
        mTextField.setDropTarget(new DropTarget() {
            @Override
            public synchronized void drop(DropTargetDropEvent evt) {
                try {
                    evt.acceptDrop(DnDConstants.ACTION_COPY);
                    List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    mTextField.setText(droppedFiles.get(0).getAbsolutePath());
                } catch (UnsupportedFlavorException | IOException ex) {
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mLabel = new javax.swing.JLabel();
        mTextField = new javax.swing.JTextField();
        mButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(mLabel, org.openide.util.NbBundle.getMessage(FileChooserPanel.class, "FileChooserPanel.mLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(mButton, "â€¦"); // NOI18N
        mButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
            .addGroup(layout.createSequentialGroup()
                .addComponent(mLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButtonActionPerformed
        if (mTitle != null) {
            mFileChooser.setDialogTitle(mTitle);
        }

        File baseDirectory = new File(mTextField.getText());

        if (baseDirectory.exists() && baseDirectory.isFile()) {
            baseDirectory = baseDirectory.getParentFile();
        }

        mFileChooser.setCurrentDirectory(baseDirectory);

        int returnVal = mFileChooser.showOpenDialog(mButton.getTopLevelAncestor());

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            mTextField.setText(mFileChooser.getSelectedFile().toString());
            try {
                mFileChooserButtonListener.onFileChooserOk(mFileChooser.getSelectedFile());
            } catch (Exception e) {
            }
        } else {
            try {
                mFileChooserButtonListener.onFileChooserCancel();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_mButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton mButton;
    private javax.swing.JLabel mLabel;
    private javax.swing.JTextField mTextField;
    // End of variables declaration//GEN-END:variables

    public interface FileChooserButtonListener {

        public void onFileChooserCancel();

        public void onFileChooserOk(File file);
    }
}
