/*
 * Copyright 2015 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.almond.imageviewer;

import se.trixon.almond.dictionary.Dict;
import se.trixon.almond.icon.Pict;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
public class ImageViewPanel extends javax.swing.JPanel {
    private static final int ICON_SIZE = 24;

    /**
     * Creates new form PreviewPanel
     */
    public ImageViewPanel() {
        initComponents();
        init();
    }

    private void init() {
        startButton.setIcon(Pict.Actions.MEDIA_PLAYBACK_START.get(ICON_SIZE));
        playToggleButton.setIcon(Pict.Actions.MEDIA_PLAYBACK_START.get(ICON_SIZE));
        playToggleButton.setSelectedIcon(Pict.Actions.MEDIA_PLAYBACK_PAUSE.get(ICON_SIZE));
        startButton.setToolTipText(Dict.START.getString());

        prevButton.setIcon(Pict.Actions.MEDIA_SEEK_BACKWARD.get(ICON_SIZE));
        nextButton.setIcon(Pict.Actions.MEDIA_SEEK_FORWARD.get(ICON_SIZE));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previewLabel = new javax.swing.JLabel();
        controlPanel = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        toolBar = new javax.swing.JToolBar();
        prevButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        playToggleButton = new javax.swing.JToggleButton();
        nextButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setLayout(new java.awt.BorderLayout());

        previewLabel.setBackground(new java.awt.Color(102, 102, 102));
        previewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(previewLabel, org.openide.util.NbBundle.getMessage(ImageViewPanel.class, "ImageViewPanel.previewLabel.text")); // NOI18N
        previewLabel.setEnabled(false);
        previewLabel.setOpaque(true);
        add(previewLabel, java.awt.BorderLayout.CENTER);

        controlPanel.setLayout(new java.awt.BorderLayout());
        controlPanel.add(jSlider1, java.awt.BorderLayout.CENTER);

        toolBar.setFloatable(false);
        toolBar.setBorderPainted(false);

        prevButton.setToolTipText(Dict.ADD.getString());
        prevButton.setFocusable(false);
        prevButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        prevButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });
        toolBar.add(prevButton);

        startButton.setFocusable(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        toolBar.add(startButton);

        playToggleButton.setFocusable(false);
        playToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(playToggleButton);

        nextButton.setToolTipText(Dict.EDIT.getString());
        nextButton.setFocusable(false);
        nextButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nextButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        toolBar.add(nextButton);
        toolBar.add(jSeparator1);
        toolBar.add(filler1);

        controlPanel.add(toolBar, java.awt.BorderLayout.WEST);

        add(controlPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed

    }//GEN-LAST:event_startButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed

    }//GEN-LAST:event_prevButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed

    }//GEN-LAST:event_nextButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton nextButton;
    private javax.swing.JToggleButton playToggleButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JLabel previewLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
}
